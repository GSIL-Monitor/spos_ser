// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package spos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RecvMsgRes_MsgType int32

const (
	RecvMsgRes_TEXT  RecvMsgRes_MsgType = 0
	RecvMsgRes_VOICE RecvMsgRes_MsgType = 1
	RecvMsgRes_IMAGE RecvMsgRes_MsgType = 2
	RecvMsgRes_VIDEO RecvMsgRes_MsgType = 3
)

var RecvMsgRes_MsgType_name = map[int32]string{
	0: "TEXT",
	1: "VOICE",
	2: "IMAGE",
	3: "VIDEO",
}
var RecvMsgRes_MsgType_value = map[string]int32{
	"TEXT":  0,
	"VOICE": 1,
	"IMAGE": 2,
	"VIDEO": 3,
}

func (x RecvMsgRes_MsgType) String() string {
	return proto.EnumName(RecvMsgRes_MsgType_name, int32(x))
}
func (RecvMsgRes_MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{7, 0}
}

type SendMsgReq_MsgType int32

const (
	SendMsgReq_TEXT  SendMsgReq_MsgType = 0
	SendMsgReq_VOICE SendMsgReq_MsgType = 1
	SendMsgReq_IMAGE SendMsgReq_MsgType = 2
	SendMsgReq_VIDEO SendMsgReq_MsgType = 3
)

var SendMsgReq_MsgType_name = map[int32]string{
	0: "TEXT",
	1: "VOICE",
	2: "IMAGE",
	3: "VIDEO",
}
var SendMsgReq_MsgType_value = map[string]int32{
	"TEXT":  0,
	"VOICE": 1,
	"IMAGE": 2,
	"VIDEO": 3,
}

func (x SendMsgReq_MsgType) String() string {
	return proto.EnumName(SendMsgReq_MsgType_name, int32(x))
}
func (SendMsgReq_MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{8, 0}
}

type ClientSendMsgToServer_MsgType int32

const (
	ClientSendMsgToServer_TEXT  ClientSendMsgToServer_MsgType = 0
	ClientSendMsgToServer_VOICE ClientSendMsgToServer_MsgType = 1
	ClientSendMsgToServer_IMAGE ClientSendMsgToServer_MsgType = 2
	ClientSendMsgToServer_VIDEO ClientSendMsgToServer_MsgType = 3
)

var ClientSendMsgToServer_MsgType_name = map[int32]string{
	0: "TEXT",
	1: "VOICE",
	2: "IMAGE",
	3: "VIDEO",
}
var ClientSendMsgToServer_MsgType_value = map[string]int32{
	"TEXT":  0,
	"VOICE": 1,
	"IMAGE": 2,
	"VIDEO": 3,
}

func (x ClientSendMsgToServer_MsgType) String() string {
	return proto.EnumName(ClientSendMsgToServer_MsgType_name, int32(x))
}
func (ClientSendMsgToServer_MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{10, 0}
}

type ServerSendMsgToClient_MsgType int32

const (
	ServerSendMsgToClient_TEXT  ServerSendMsgToClient_MsgType = 0
	ServerSendMsgToClient_VOICE ServerSendMsgToClient_MsgType = 1
	ServerSendMsgToClient_IMAGE ServerSendMsgToClient_MsgType = 2
	ServerSendMsgToClient_VIDEO ServerSendMsgToClient_MsgType = 3
)

var ServerSendMsgToClient_MsgType_name = map[int32]string{
	0: "TEXT",
	1: "VOICE",
	2: "IMAGE",
	3: "VIDEO",
}
var ServerSendMsgToClient_MsgType_value = map[string]int32{
	"TEXT":  0,
	"VOICE": 1,
	"IMAGE": 2,
	"VIDEO": 3,
}

func (x ServerSendMsgToClient_MsgType) String() string {
	return proto.EnumName(ServerSendMsgToClient_MsgType_name, int32(x))
}
func (ServerSendMsgToClient_MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{11, 0}
}

//  client login Req
type ClientLoginReq struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Mac                  string   `protobuf:"bytes,4,opt,name=mac,proto3" json:"mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientLoginReq) Reset()         { *m = ClientLoginReq{} }
func (m *ClientLoginReq) String() string { return proto.CompactTextString(m) }
func (*ClientLoginReq) ProtoMessage()    {}
func (*ClientLoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{0}
}
func (m *ClientLoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLoginReq.Unmarshal(m, b)
}
func (m *ClientLoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLoginReq.Marshal(b, m, deterministic)
}
func (dst *ClientLoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLoginReq.Merge(dst, src)
}
func (m *ClientLoginReq) XXX_Size() int {
	return xxx_messageInfo_ClientLoginReq.Size(m)
}
func (m *ClientLoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLoginReq proto.InternalMessageInfo

func (m *ClientLoginReq) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *ClientLoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ClientLoginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClientLoginReq) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type ClientLoginRes struct {
	Ret                  bool     `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	ResStr               string   `protobuf:"bytes,2,opt,name=res_str,json=resStr,proto3" json:"res_str,omitempty"`
	ResToken             string   `protobuf:"bytes,3,opt,name=res_token,json=resToken,proto3" json:"res_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientLoginRes) Reset()         { *m = ClientLoginRes{} }
func (m *ClientLoginRes) String() string { return proto.CompactTextString(m) }
func (*ClientLoginRes) ProtoMessage()    {}
func (*ClientLoginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{1}
}
func (m *ClientLoginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLoginRes.Unmarshal(m, b)
}
func (m *ClientLoginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLoginRes.Marshal(b, m, deterministic)
}
func (dst *ClientLoginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLoginRes.Merge(dst, src)
}
func (m *ClientLoginRes) XXX_Size() int {
	return xxx_messageInfo_ClientLoginRes.Size(m)
}
func (m *ClientLoginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLoginRes.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLoginRes proto.InternalMessageInfo

func (m *ClientLoginRes) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *ClientLoginRes) GetResStr() string {
	if m != nil {
		return m.ResStr
	}
	return ""
}

func (m *ClientLoginRes) GetResToken() string {
	if m != nil {
		return m.ResToken
	}
	return ""
}

//  client logout Req
type ClientLogoutReq struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mac                  string   `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientLogoutReq) Reset()         { *m = ClientLogoutReq{} }
func (m *ClientLogoutReq) String() string { return proto.CompactTextString(m) }
func (*ClientLogoutReq) ProtoMessage()    {}
func (*ClientLogoutReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{2}
}
func (m *ClientLogoutReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLogoutReq.Unmarshal(m, b)
}
func (m *ClientLogoutReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLogoutReq.Marshal(b, m, deterministic)
}
func (dst *ClientLogoutReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLogoutReq.Merge(dst, src)
}
func (m *ClientLogoutReq) XXX_Size() int {
	return xxx_messageInfo_ClientLogoutReq.Size(m)
}
func (m *ClientLogoutReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLogoutReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLogoutReq proto.InternalMessageInfo

func (m *ClientLogoutReq) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *ClientLogoutReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClientLogoutReq) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type ClientLogoutRes struct {
	Ret                  bool     `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientLogoutRes) Reset()         { *m = ClientLogoutRes{} }
func (m *ClientLogoutRes) String() string { return proto.CompactTextString(m) }
func (*ClientLogoutRes) ProtoMessage()    {}
func (*ClientLogoutRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{3}
}
func (m *ClientLogoutRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLogoutRes.Unmarshal(m, b)
}
func (m *ClientLogoutRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLogoutRes.Marshal(b, m, deterministic)
}
func (dst *ClientLogoutRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLogoutRes.Merge(dst, src)
}
func (m *ClientLogoutRes) XXX_Size() int {
	return xxx_messageInfo_ClientLogoutRes.Size(m)
}
func (m *ClientLogoutRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLogoutRes.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLogoutRes proto.InternalMessageInfo

func (m *ClientLogoutRes) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

//  client heart Req
type ClientHeartReq struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mac                  string   `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientHeartReq) Reset()         { *m = ClientHeartReq{} }
func (m *ClientHeartReq) String() string { return proto.CompactTextString(m) }
func (*ClientHeartReq) ProtoMessage()    {}
func (*ClientHeartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{4}
}
func (m *ClientHeartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientHeartReq.Unmarshal(m, b)
}
func (m *ClientHeartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientHeartReq.Marshal(b, m, deterministic)
}
func (dst *ClientHeartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientHeartReq.Merge(dst, src)
}
func (m *ClientHeartReq) XXX_Size() int {
	return xxx_messageInfo_ClientHeartReq.Size(m)
}
func (m *ClientHeartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientHeartReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClientHeartReq proto.InternalMessageInfo

func (m *ClientHeartReq) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *ClientHeartReq) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type ClientHeartRes struct {
	Ret                  bool     `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientHeartRes) Reset()         { *m = ClientHeartRes{} }
func (m *ClientHeartRes) String() string { return proto.CompactTextString(m) }
func (*ClientHeartRes) ProtoMessage()    {}
func (*ClientHeartRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{5}
}
func (m *ClientHeartRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientHeartRes.Unmarshal(m, b)
}
func (m *ClientHeartRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientHeartRes.Marshal(b, m, deterministic)
}
func (dst *ClientHeartRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientHeartRes.Merge(dst, src)
}
func (m *ClientHeartRes) XXX_Size() int {
	return xxx_messageInfo_ClientHeartRes.Size(m)
}
func (m *ClientHeartRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientHeartRes.DiscardUnknown(m)
}

var xxx_messageInfo_ClientHeartRes proto.InternalMessageInfo

func (m *ClientHeartRes) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *ClientHeartRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type RecvMsgReq struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Smac                 string   `protobuf:"bytes,3,opt,name=smac,proto3" json:"smac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecvMsgReq) Reset()         { *m = RecvMsgReq{} }
func (m *RecvMsgReq) String() string { return proto.CompactTextString(m) }
func (*RecvMsgReq) ProtoMessage()    {}
func (*RecvMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{6}
}
func (m *RecvMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecvMsgReq.Unmarshal(m, b)
}
func (m *RecvMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecvMsgReq.Marshal(b, m, deterministic)
}
func (dst *RecvMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecvMsgReq.Merge(dst, src)
}
func (m *RecvMsgReq) XXX_Size() int {
	return xxx_messageInfo_RecvMsgReq.Size(m)
}
func (m *RecvMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RecvMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_RecvMsgReq proto.InternalMessageInfo

func (m *RecvMsgReq) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *RecvMsgReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RecvMsgReq) GetSmac() string {
	if m != nil {
		return m.Smac
	}
	return ""
}

type RecvMsgRes struct {
	Mtype                RecvMsgRes_MsgType `protobuf:"varint,1,opt,name=mtype,proto3,enum=spos.RecvMsgRes_MsgType" json:"mtype,omitempty"`
	Sid                  string             `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Smac                 string             `protobuf:"bytes,3,opt,name=smac,proto3" json:"smac,omitempty"`
	Did                  string             `protobuf:"bytes,4,opt,name=did,proto3" json:"did,omitempty"`
	Dmac                 string             `protobuf:"bytes,5,opt,name=dmac,proto3" json:"dmac,omitempty"`
	SampleRate           int32              `protobuf:"varint,6,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	MsgId                string             `protobuf:"bytes,7,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	MsgNum               int32              `protobuf:"varint,8,opt,name=msg_num,json=msgNum,proto3" json:"msg_num,omitempty"`
	MsgLen               int32              `protobuf:"varint,9,opt,name=msg_len,json=msgLen,proto3" json:"msg_len,omitempty"`
	MsgStatus            int32              `protobuf:"varint,10,opt,name=msg_status,json=msgStatus,proto3" json:"msg_status,omitempty"`
	Msg                  []byte             `protobuf:"bytes,11,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RecvMsgRes) Reset()         { *m = RecvMsgRes{} }
func (m *RecvMsgRes) String() string { return proto.CompactTextString(m) }
func (*RecvMsgRes) ProtoMessage()    {}
func (*RecvMsgRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{7}
}
func (m *RecvMsgRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecvMsgRes.Unmarshal(m, b)
}
func (m *RecvMsgRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecvMsgRes.Marshal(b, m, deterministic)
}
func (dst *RecvMsgRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecvMsgRes.Merge(dst, src)
}
func (m *RecvMsgRes) XXX_Size() int {
	return xxx_messageInfo_RecvMsgRes.Size(m)
}
func (m *RecvMsgRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RecvMsgRes.DiscardUnknown(m)
}

var xxx_messageInfo_RecvMsgRes proto.InternalMessageInfo

func (m *RecvMsgRes) GetMtype() RecvMsgRes_MsgType {
	if m != nil {
		return m.Mtype
	}
	return RecvMsgRes_TEXT
}

func (m *RecvMsgRes) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *RecvMsgRes) GetSmac() string {
	if m != nil {
		return m.Smac
	}
	return ""
}

func (m *RecvMsgRes) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *RecvMsgRes) GetDmac() string {
	if m != nil {
		return m.Dmac
	}
	return ""
}

func (m *RecvMsgRes) GetSampleRate() int32 {
	if m != nil {
		return m.SampleRate
	}
	return 0
}

func (m *RecvMsgRes) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *RecvMsgRes) GetMsgNum() int32 {
	if m != nil {
		return m.MsgNum
	}
	return 0
}

func (m *RecvMsgRes) GetMsgLen() int32 {
	if m != nil {
		return m.MsgLen
	}
	return 0
}

func (m *RecvMsgRes) GetMsgStatus() int32 {
	if m != nil {
		return m.MsgStatus
	}
	return 0
}

func (m *RecvMsgRes) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type SendMsgReq struct {
	Mtype                SendMsgReq_MsgType `protobuf:"varint,1,opt,name=mtype,proto3,enum=spos.SendMsgReq_MsgType" json:"mtype,omitempty"`
	Sid                  string             `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Smac                 string             `protobuf:"bytes,3,opt,name=smac,proto3" json:"smac,omitempty"`
	Did                  string             `protobuf:"bytes,4,opt,name=did,proto3" json:"did,omitempty"`
	Dmac                 string             `protobuf:"bytes,5,opt,name=dmac,proto3" json:"dmac,omitempty"`
	SampleRate           int32              `protobuf:"varint,6,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	MsgId                string             `protobuf:"bytes,7,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	MsgNum               int32              `protobuf:"varint,8,opt,name=msg_num,json=msgNum,proto3" json:"msg_num,omitempty"`
	MsgLen               int32              `protobuf:"varint,9,opt,name=msg_len,json=msgLen,proto3" json:"msg_len,omitempty"`
	MsgStatus            int32              `protobuf:"varint,10,opt,name=msg_status,json=msgStatus,proto3" json:"msg_status,omitempty"`
	Msg                  []byte             `protobuf:"bytes,11,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SendMsgReq) Reset()         { *m = SendMsgReq{} }
func (m *SendMsgReq) String() string { return proto.CompactTextString(m) }
func (*SendMsgReq) ProtoMessage()    {}
func (*SendMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{8}
}
func (m *SendMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMsgReq.Unmarshal(m, b)
}
func (m *SendMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMsgReq.Marshal(b, m, deterministic)
}
func (dst *SendMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMsgReq.Merge(dst, src)
}
func (m *SendMsgReq) XXX_Size() int {
	return xxx_messageInfo_SendMsgReq.Size(m)
}
func (m *SendMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendMsgReq proto.InternalMessageInfo

func (m *SendMsgReq) GetMtype() SendMsgReq_MsgType {
	if m != nil {
		return m.Mtype
	}
	return SendMsgReq_TEXT
}

func (m *SendMsgReq) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *SendMsgReq) GetSmac() string {
	if m != nil {
		return m.Smac
	}
	return ""
}

func (m *SendMsgReq) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *SendMsgReq) GetDmac() string {
	if m != nil {
		return m.Dmac
	}
	return ""
}

func (m *SendMsgReq) GetSampleRate() int32 {
	if m != nil {
		return m.SampleRate
	}
	return 0
}

func (m *SendMsgReq) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *SendMsgReq) GetMsgNum() int32 {
	if m != nil {
		return m.MsgNum
	}
	return 0
}

func (m *SendMsgReq) GetMsgLen() int32 {
	if m != nil {
		return m.MsgLen
	}
	return 0
}

func (m *SendMsgReq) GetMsgStatus() int32 {
	if m != nil {
		return m.MsgStatus
	}
	return 0
}

func (m *SendMsgReq) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type SendMsgRes struct {
	Ret                  int32    `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMsgRes) Reset()         { *m = SendMsgRes{} }
func (m *SendMsgRes) String() string { return proto.CompactTextString(m) }
func (*SendMsgRes) ProtoMessage()    {}
func (*SendMsgRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{9}
}
func (m *SendMsgRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMsgRes.Unmarshal(m, b)
}
func (m *SendMsgRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMsgRes.Marshal(b, m, deterministic)
}
func (dst *SendMsgRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMsgRes.Merge(dst, src)
}
func (m *SendMsgRes) XXX_Size() int {
	return xxx_messageInfo_SendMsgRes.Size(m)
}
func (m *SendMsgRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMsgRes.DiscardUnknown(m)
}

var xxx_messageInfo_SendMsgRes proto.InternalMessageInfo

func (m *SendMsgRes) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *SendMsgRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

//  client send data to server
type ClientSendMsgToServer struct {
	Mtype                ClientSendMsgToServer_MsgType `protobuf:"varint,1,opt,name=mtype,proto3,enum=spos.ClientSendMsgToServer_MsgType" json:"mtype,omitempty"`
	Sid                  string                        `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Did                  string                        `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	SampleRate           int32                         `protobuf:"varint,4,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	MsgId                string                        `protobuf:"bytes,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	MsgNum               int32                         `protobuf:"varint,6,opt,name=msg_num,json=msgNum,proto3" json:"msg_num,omitempty"`
	MsgLen               int32                         `protobuf:"varint,7,opt,name=msg_len,json=msgLen,proto3" json:"msg_len,omitempty"`
	MsgStatus            int32                         `protobuf:"varint,8,opt,name=msg_status,json=msgStatus,proto3" json:"msg_status,omitempty"`
	Msg                  []byte                        `protobuf:"bytes,9,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ClientSendMsgToServer) Reset()         { *m = ClientSendMsgToServer{} }
func (m *ClientSendMsgToServer) String() string { return proto.CompactTextString(m) }
func (*ClientSendMsgToServer) ProtoMessage()    {}
func (*ClientSendMsgToServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{10}
}
func (m *ClientSendMsgToServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientSendMsgToServer.Unmarshal(m, b)
}
func (m *ClientSendMsgToServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientSendMsgToServer.Marshal(b, m, deterministic)
}
func (dst *ClientSendMsgToServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientSendMsgToServer.Merge(dst, src)
}
func (m *ClientSendMsgToServer) XXX_Size() int {
	return xxx_messageInfo_ClientSendMsgToServer.Size(m)
}
func (m *ClientSendMsgToServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientSendMsgToServer.DiscardUnknown(m)
}

var xxx_messageInfo_ClientSendMsgToServer proto.InternalMessageInfo

func (m *ClientSendMsgToServer) GetMtype() ClientSendMsgToServer_MsgType {
	if m != nil {
		return m.Mtype
	}
	return ClientSendMsgToServer_TEXT
}

func (m *ClientSendMsgToServer) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *ClientSendMsgToServer) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *ClientSendMsgToServer) GetSampleRate() int32 {
	if m != nil {
		return m.SampleRate
	}
	return 0
}

func (m *ClientSendMsgToServer) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *ClientSendMsgToServer) GetMsgNum() int32 {
	if m != nil {
		return m.MsgNum
	}
	return 0
}

func (m *ClientSendMsgToServer) GetMsgLen() int32 {
	if m != nil {
		return m.MsgLen
	}
	return 0
}

func (m *ClientSendMsgToServer) GetMsgStatus() int32 {
	if m != nil {
		return m.MsgStatus
	}
	return 0
}

func (m *ClientSendMsgToServer) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

// server send data to client
type ServerSendMsgToClient struct {
	Mtype                ServerSendMsgToClient_MsgType `protobuf:"varint,1,opt,name=mtype,proto3,enum=spos.ServerSendMsgToClient_MsgType" json:"mtype,omitempty"`
	Sid                  string                        `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Did                  string                        `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	SampleRate           int32                         `protobuf:"varint,4,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	MsgId                string                        `protobuf:"bytes,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	MsgNum               int32                         `protobuf:"varint,6,opt,name=msg_num,json=msgNum,proto3" json:"msg_num,omitempty"`
	MsgLen               int32                         `protobuf:"varint,7,opt,name=msg_len,json=msgLen,proto3" json:"msg_len,omitempty"`
	MsgStatus            int32                         `protobuf:"varint,8,opt,name=msg_status,json=msgStatus,proto3" json:"msg_status,omitempty"`
	Msg                  []byte                        `protobuf:"bytes,9,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ServerSendMsgToClient) Reset()         { *m = ServerSendMsgToClient{} }
func (m *ServerSendMsgToClient) String() string { return proto.CompactTextString(m) }
func (*ServerSendMsgToClient) ProtoMessage()    {}
func (*ServerSendMsgToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{11}
}
func (m *ServerSendMsgToClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerSendMsgToClient.Unmarshal(m, b)
}
func (m *ServerSendMsgToClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerSendMsgToClient.Marshal(b, m, deterministic)
}
func (dst *ServerSendMsgToClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerSendMsgToClient.Merge(dst, src)
}
func (m *ServerSendMsgToClient) XXX_Size() int {
	return xxx_messageInfo_ServerSendMsgToClient.Size(m)
}
func (m *ServerSendMsgToClient) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerSendMsgToClient.DiscardUnknown(m)
}

var xxx_messageInfo_ServerSendMsgToClient proto.InternalMessageInfo

func (m *ServerSendMsgToClient) GetMtype() ServerSendMsgToClient_MsgType {
	if m != nil {
		return m.Mtype
	}
	return ServerSendMsgToClient_TEXT
}

func (m *ServerSendMsgToClient) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *ServerSendMsgToClient) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *ServerSendMsgToClient) GetSampleRate() int32 {
	if m != nil {
		return m.SampleRate
	}
	return 0
}

func (m *ServerSendMsgToClient) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *ServerSendMsgToClient) GetMsgNum() int32 {
	if m != nil {
		return m.MsgNum
	}
	return 0
}

func (m *ServerSendMsgToClient) GetMsgLen() int32 {
	if m != nil {
		return m.MsgLen
	}
	return 0
}

func (m *ServerSendMsgToClient) GetMsgStatus() int32 {
	if m != nil {
		return m.MsgStatus
	}
	return 0
}

func (m *ServerSendMsgToClient) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

// The request message containing the user's name.
type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{12}
}
func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (dst *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(dst, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_2a14d189c2869ef7, []int{13}
}
func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (dst *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(dst, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientLoginReq)(nil), "spos.ClientLoginReq")
	proto.RegisterType((*ClientLoginRes)(nil), "spos.ClientLoginRes")
	proto.RegisterType((*ClientLogoutReq)(nil), "spos.ClientLogoutReq")
	proto.RegisterType((*ClientLogoutRes)(nil), "spos.ClientLogoutRes")
	proto.RegisterType((*ClientHeartReq)(nil), "spos.ClientHeartReq")
	proto.RegisterType((*ClientHeartRes)(nil), "spos.ClientHeartRes")
	proto.RegisterType((*RecvMsgReq)(nil), "spos.RecvMsgReq")
	proto.RegisterType((*RecvMsgRes)(nil), "spos.RecvMsgRes")
	proto.RegisterType((*SendMsgReq)(nil), "spos.SendMsgReq")
	proto.RegisterType((*SendMsgRes)(nil), "spos.SendMsgRes")
	proto.RegisterType((*ClientSendMsgToServer)(nil), "spos.ClientSendMsgToServer")
	proto.RegisterType((*ServerSendMsgToClient)(nil), "spos.ServerSendMsgToClient")
	proto.RegisterType((*HelloRequest)(nil), "spos.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "spos.HelloReply")
	proto.RegisterEnum("spos.RecvMsgRes_MsgType", RecvMsgRes_MsgType_name, RecvMsgRes_MsgType_value)
	proto.RegisterEnum("spos.SendMsgReq_MsgType", SendMsgReq_MsgType_name, SendMsgReq_MsgType_value)
	proto.RegisterEnum("spos.ClientSendMsgToServer_MsgType", ClientSendMsgToServer_MsgType_name, ClientSendMsgToServer_MsgType_value)
	proto.RegisterEnum("spos.ServerSendMsgToClient_MsgType", ServerSendMsgToClient_MsgType_name, ServerSendMsgToClient_MsgType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Login(ctx context.Context, in *ClientLoginReq, opts ...grpc.CallOption) (*ClientLoginRes, error)
	Logout(ctx context.Context, in *ClientLogoutReq, opts ...grpc.CallOption) (*ClientLogoutRes, error)
	HeartMsg(ctx context.Context, in *ClientHeartReq, opts ...grpc.CallOption) (*ClientHeartRes, error)
	RecvMsgStream(ctx context.Context, in *RecvMsgReq, opts ...grpc.CallOption) (Chat_RecvMsgStreamClient, error)
	SendMsgStream(ctx context.Context, opts ...grpc.CallOption) (Chat_SendMsgStreamClient, error)
	BidStream(ctx context.Context, opts ...grpc.CallOption) (Chat_BidStreamClient, error)
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Login(ctx context.Context, in *ClientLoginReq, opts ...grpc.CallOption) (*ClientLoginRes, error) {
	out := new(ClientLoginRes)
	err := c.cc.Invoke(ctx, "/spos.Chat/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Logout(ctx context.Context, in *ClientLogoutReq, opts ...grpc.CallOption) (*ClientLogoutRes, error) {
	out := new(ClientLogoutRes)
	err := c.cc.Invoke(ctx, "/spos.Chat/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) HeartMsg(ctx context.Context, in *ClientHeartReq, opts ...grpc.CallOption) (*ClientHeartRes, error) {
	out := new(ClientHeartRes)
	err := c.cc.Invoke(ctx, "/spos.Chat/HeartMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) RecvMsgStream(ctx context.Context, in *RecvMsgReq, opts ...grpc.CallOption) (Chat_RecvMsgStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/spos.Chat/RecvMsgStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatRecvMsgStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_RecvMsgStreamClient interface {
	Recv() (*RecvMsgRes, error)
	grpc.ClientStream
}

type chatRecvMsgStreamClient struct {
	grpc.ClientStream
}

func (x *chatRecvMsgStreamClient) Recv() (*RecvMsgRes, error) {
	m := new(RecvMsgRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) SendMsgStream(ctx context.Context, opts ...grpc.CallOption) (Chat_SendMsgStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[1], "/spos.Chat/SendMsgStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatSendMsgStreamClient{stream}
	return x, nil
}

type Chat_SendMsgStreamClient interface {
	Send(*SendMsgReq) error
	CloseAndRecv() (*SendMsgRes, error)
	grpc.ClientStream
}

type chatSendMsgStreamClient struct {
	grpc.ClientStream
}

func (x *chatSendMsgStreamClient) Send(m *SendMsgReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatSendMsgStreamClient) CloseAndRecv() (*SendMsgRes, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendMsgRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) BidStream(ctx context.Context, opts ...grpc.CallOption) (Chat_BidStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[2], "/spos.Chat/BidStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatBidStreamClient{stream}
	return x, nil
}

type Chat_BidStreamClient interface {
	Send(*ClientSendMsgToServer) error
	Recv() (*ServerSendMsgToClient, error)
	grpc.ClientStream
}

type chatBidStreamClient struct {
	grpc.ClientStream
}

func (x *chatBidStreamClient) Send(m *ClientSendMsgToServer) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatBidStreamClient) Recv() (*ServerSendMsgToClient, error) {
	m := new(ServerSendMsgToClient)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/spos.Chat/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Login(context.Context, *ClientLoginReq) (*ClientLoginRes, error)
	Logout(context.Context, *ClientLogoutReq) (*ClientLogoutRes, error)
	HeartMsg(context.Context, *ClientHeartReq) (*ClientHeartRes, error)
	RecvMsgStream(*RecvMsgReq, Chat_RecvMsgStreamServer) error
	SendMsgStream(Chat_SendMsgStreamServer) error
	BidStream(Chat_BidStreamServer) error
	// Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spos.Chat/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Login(ctx, req.(*ClientLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientLogoutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spos.Chat/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Logout(ctx, req.(*ClientLogoutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_HeartMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientHeartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).HeartMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spos.Chat/HeartMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).HeartMsg(ctx, req.(*ClientHeartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_RecvMsgStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RecvMsgReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).RecvMsgStream(m, &chatRecvMsgStreamServer{stream})
}

type Chat_RecvMsgStreamServer interface {
	Send(*RecvMsgRes) error
	grpc.ServerStream
}

type chatRecvMsgStreamServer struct {
	grpc.ServerStream
}

func (x *chatRecvMsgStreamServer) Send(m *RecvMsgRes) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_SendMsgStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServer).SendMsgStream(&chatSendMsgStreamServer{stream})
}

type Chat_SendMsgStreamServer interface {
	SendAndClose(*SendMsgRes) error
	Recv() (*SendMsgReq, error)
	grpc.ServerStream
}

type chatSendMsgStreamServer struct {
	grpc.ServerStream
}

func (x *chatSendMsgStreamServer) SendAndClose(m *SendMsgRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatSendMsgStreamServer) Recv() (*SendMsgReq, error) {
	m := new(SendMsgReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Chat_BidStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServer).BidStream(&chatBidStreamServer{stream})
}

type Chat_BidStreamServer interface {
	Send(*ServerSendMsgToClient) error
	Recv() (*ClientSendMsgToServer, error)
	grpc.ServerStream
}

type chatBidStreamServer struct {
	grpc.ServerStream
}

func (x *chatBidStreamServer) Send(m *ServerSendMsgToClient) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatBidStreamServer) Recv() (*ClientSendMsgToServer, error) {
	m := new(ClientSendMsgToServer)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Chat_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spos.Chat/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spos.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Chat_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Chat_Logout_Handler,
		},
		{
			MethodName: "HeartMsg",
			Handler:    _Chat_HeartMsg_Handler,
		},
		{
			MethodName: "SayHello",
			Handler:    _Chat_SayHello_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RecvMsgStream",
			Handler:       _Chat_RecvMsgStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendMsgStream",
			Handler:       _Chat_SendMsgStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "BidStream",
			Handler:       _Chat_BidStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "chat.proto",
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_chat_2a14d189c2869ef7) }

var fileDescriptor_chat_2a14d189c2869ef7 = []byte{
	// 731 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0x93, 0x38, 0x71, 0xa6, 0x3f, 0x58, 0x2b, 0x2a, 0xac, 0x54, 0x88, 0xca, 0x95, 0x50,
	0x4e, 0x56, 0x55, 0x8a, 0x80, 0x23, 0x2d, 0x81, 0x46, 0x34, 0xb4, 0x72, 0x22, 0xd4, 0x5b, 0x65,
	0xe2, 0x95, 0x6b, 0x11, 0xff, 0x74, 0x67, 0x53, 0x94, 0xf7, 0xe1, 0x5d, 0x78, 0x06, 0xde, 0x06,
	0xed, 0xae, 0x1d, 0x27, 0xc6, 0x09, 0x20, 0xae, 0xbd, 0x8d, 0x67, 0xbf, 0x99, 0xd9, 0xf9, 0xbe,
	0xdd, 0x1d, 0x03, 0x4c, 0x6e, 0x3d, 0xee, 0xa4, 0x2c, 0xe1, 0x09, 0x69, 0x62, 0x9a, 0xa0, 0xed,
	0xc3, 0xee, 0xd9, 0x34, 0xa4, 0x31, 0xbf, 0x48, 0x82, 0x30, 0x76, 0xe9, 0x1d, 0x31, 0xa1, 0x81,
	0xa1, 0x6f, 0x69, 0x07, 0x5a, 0xaf, 0xe3, 0x0a, 0x93, 0x74, 0xc1, 0x48, 0x3d, 0xc4, 0x6f, 0x09,
	0xf3, 0xad, 0xba, 0x74, 0x2f, 0xbe, 0x09, 0x81, 0x66, 0xec, 0x45, 0xd4, 0x6a, 0x48, 0xbf, 0xb4,
	0x45, 0x86, 0xc8, 0x9b, 0x58, 0x4d, 0x95, 0x21, 0xf2, 0x26, 0xf6, 0x75, 0xa9, 0x0a, 0x0a, 0x0c,
	0xa3, 0x5c, 0x56, 0x31, 0x5c, 0x61, 0x92, 0x27, 0xd0, 0x66, 0x14, 0x6f, 0x90, 0xb3, 0xac, 0x48,
	0x8b, 0x51, 0x1c, 0x71, 0x46, 0xf6, 0xa1, 0x23, 0x16, 0x78, 0xf2, 0x95, 0xc6, 0x59, 0x1d, 0x83,
	0x51, 0x1c, 0x8b, 0x6f, 0x7b, 0x00, 0x8f, 0x16, 0x99, 0x93, 0x19, 0xaf, 0x6e, 0x20, 0xdf, 0x64,
	0xfd, 0xf7, 0x4d, 0x36, 0x8a, 0x4d, 0x1e, 0x96, 0x53, 0x55, 0xec, 0xd2, 0x3e, 0xc9, 0x3b, 0x39,
	0xa7, 0x1e, 0x5b, 0x53, 0x2e, 0x4b, 0x5d, 0x2f, 0x52, 0x97, 0xa3, 0xaa, 0xfa, 0x17, 0x51, 0x18,
	0x2c, 0xa2, 0x30, 0xb0, 0xdf, 0x03, 0xb8, 0x74, 0x72, 0x3f, 0xc4, 0xe0, 0xef, 0xdb, 0x22, 0xd0,
	0xc4, 0xa2, 0x2f, 0x69, 0xdb, 0x3f, 0xeb, 0x4b, 0x89, 0x90, 0x38, 0xa0, 0x47, 0x7c, 0x9e, 0x52,
	0x99, 0x6a, 0xf7, 0xd8, 0x72, 0xc4, 0x41, 0x70, 0x0a, 0x80, 0x33, 0xc4, 0x60, 0x3c, 0x4f, 0xa9,
	0xab, 0x60, 0x79, 0xe1, 0xfa, 0x4a, 0xe1, 0x72, 0x11, 0x81, 0xf2, 0x43, 0x3f, 0x17, 0xdd, 0x57,
	0x28, 0x5f, 0xa0, 0x74, 0x85, 0x12, 0x36, 0x79, 0x06, 0x5b, 0xe8, 0x45, 0xe9, 0x94, 0xde, 0x30,
	0x8f, 0x53, 0xab, 0x75, 0xa0, 0xf5, 0x74, 0x17, 0x94, 0xcb, 0xf5, 0x38, 0x25, 0x7b, 0xd0, 0x8a,
	0x30, 0xb8, 0x09, 0x7d, 0xab, 0x2d, 0xc3, 0xf4, 0x08, 0x83, 0x81, 0x2f, 0x0e, 0x87, 0x70, 0xc7,
	0xb3, 0xc8, 0x32, 0x64, 0x8c, 0x40, 0x7d, 0x9a, 0x45, 0xf9, 0xc2, 0x94, 0xc6, 0x56, 0x67, 0xb1,
	0x70, 0x41, 0x63, 0xf2, 0x14, 0x40, 0x2c, 0x20, 0xf7, 0xf8, 0x0c, 0x2d, 0x90, 0x6b, 0x9d, 0x08,
	0x83, 0x91, 0x74, 0xe4, 0x6c, 0x6f, 0x1d, 0x68, 0xbd, 0x6d, 0xc5, 0xf6, 0x09, 0xb4, 0xb3, 0xc6,
	0x89, 0x01, 0xcd, 0x71, 0xff, 0x7a, 0x6c, 0xd6, 0x48, 0x07, 0xf4, 0xcf, 0x97, 0x83, 0xb3, 0xbe,
	0xa9, 0x09, 0x73, 0x30, 0x7c, 0xfb, 0xa1, 0x6f, 0xd6, 0xa5, 0x77, 0xf0, 0xae, 0x7f, 0x69, 0x36,
	0x24, 0xb7, 0x23, 0x1a, 0xfb, 0x99, 0x48, 0xd5, 0xdc, 0x16, 0x80, 0x07, 0x6e, 0xff, 0x81, 0xdb,
	0xa3, 0x25, 0x6a, 0x57, 0x6e, 0x8c, 0xbe, 0xee, 0xc6, 0xfc, 0xa8, 0xc3, 0x9e, 0xba, 0x68, 0x59,
	0xe0, 0x38, 0x19, 0x51, 0x76, 0x4f, 0x19, 0x79, 0xb3, 0x2a, 0xcc, 0xa1, 0x12, 0xa6, 0x12, 0xfb,
	0x67, 0x8d, 0x32, 0x3d, 0x1a, 0x85, 0x1e, 0x25, 0xee, 0x9b, 0x1b, 0xb8, 0xd7, 0xd7, 0x70, 0xdf,
	0x5a, 0xc7, 0x7d, 0x7b, 0x03, 0xf7, 0xc6, 0x1a, 0xee, 0x3b, 0xff, 0xcb, 0xbd, 0x60, 0x52, 0xd1,
	0xb1, 0x60, 0x47, 0x91, 0xb5, 0x86, 0xc9, 0x4a, 0xec, 0x03, 0x93, 0x66, 0xc3, 0xb6, 0x61, 0xfb,
	0x9c, 0x4e, 0xa7, 0x89, 0x4b, 0xef, 0x66, 0x14, 0xf9, 0xe2, 0xd5, 0xd6, 0x8a, 0x57, 0xdb, 0x7e,
	0x0e, 0x90, 0x61, 0xd2, 0xe9, 0x9c, 0x58, 0xd0, 0x8e, 0x28, 0xa2, 0x17, 0xe4, 0xa0, 0xfc, 0xf3,
	0xf8, 0x7b, 0x03, 0x9a, 0x67, 0xb7, 0x1e, 0x27, 0x2f, 0x41, 0x97, 0xa3, 0x94, 0x3c, 0x5e, 0x3e,
	0xc8, 0xf9, 0x0c, 0xef, 0x56, 0x79, 0xd1, 0xae, 0x91, 0xd7, 0xd0, 0x52, 0xc3, 0x8d, 0xec, 0x95,
	0x10, 0x6a, 0x76, 0x76, 0x2b, 0xdd, 0x2a, 0xd2, 0x90, 0xb3, 0x6b, 0x88, 0xc1, 0x6a, 0xcd, 0x7c,
	0x0e, 0x76, 0xab, 0xbc, 0x22, 0xf2, 0x15, 0xec, 0x64, 0xb3, 0x65, 0xc4, 0x19, 0xf5, 0x22, 0x62,
	0x96, 0x06, 0xce, 0x5d, 0xb7, 0xec, 0x41, 0xbb, 0x76, 0xa4, 0x89, 0xc0, 0xec, 0x3c, 0xad, 0x06,
	0x16, 0xaf, 0x69, 0xb7, 0xec, 0x41, 0xbb, 0xd6, 0xd3, 0xc8, 0x47, 0xe8, 0x9c, 0x86, 0x7e, 0x16,
	0xb4, 0xbf, 0xe1, 0xa6, 0x77, 0xf7, 0x37, 0x1c, 0x5e, 0x91, 0xea, 0x48, 0x23, 0xc7, 0x60, 0x8c,
	0xbc, 0xb9, 0x54, 0x87, 0x10, 0x05, 0x5f, 0x96, 0x33, 0xdf, 0x42, 0x21, 0x9f, 0x5d, 0x3b, 0x3d,
	0x04, 0x33, 0x4c, 0x9c, 0x80, 0xa5, 0x13, 0x67, 0x16, 0x87, 0x12, 0x70, 0xba, 0x83, 0x57, 0x09,
	0x0a, 0xed, 0xae, 0xc4, 0xdf, 0xd7, 0x95, 0xf6, 0xa5, 0x25, 0x7f, 0xc3, 0x5e, 0xfc, 0x0a, 0x00,
	0x00, 0xff, 0xff, 0x00, 0xbf, 0xbf, 0x69, 0x94, 0x09, 0x00, 0x00,
}
